name: "Build App"

on: 
  workflow_dispatch:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (windows only)
        if: matrix.settings.platform == 'windows-latest' 
        run: |
          # Windows-specific commands

      - name: install dependencies (macos only)
        if: matrix.settings.platform == 'macos-latest'
        run: |
          # MacOS-specific commands

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04' 
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: pnpm-${{ matrix.settings.platform}}-${{ matrix.settings.args }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ matrix.settings.platform}}-${{ matrix.settings.args }}-

      - name: install frontend dependencies
        run: pnpm install

      - name: Cache Cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            src-tauri/target
          key: cargo-${{ matrix.settings.platform }}-${{ matrix.settings.args }}-${{ hashFiles('**/src-tauri/Cargo.lock') }}
          restore-keys: |
            cargo-${{ matrix.settings.platform }}-${{ matrix.settings.args }}-

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.settings.args }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.settings.platform }}-${{ github.sha }}
          path: |
            src-tauri/target/release/*