[package]
name = "app"
description = "NetMount"
version = "1.0.5"
authors = ["VirtualHotBar"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

windows_subsystem = "windows"

[package.metadata.windows]
manifest = "app.manifest"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.1", features = [] }
indicatif = "0.17.8"
reqwest = { version = "0.11", features = ["json", "stream", "blocking"] }
futures-util = "0.3"
zip = "1.1.4"
tokio = { version = "1", features = ["full"] }
tar = "0.4.40"
flate2 = { version = "1.0.30", features = ["zlib"] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.6.1", features = [
    "path-all",
    "macos-private-api",
    "shell-open",
    "fs-all",
    "os-all",
    "shell-execute",
    "process-all",
    "system-tray",
    "window-all",
    "devtools",
] }

directories = "5.0.1"
window-shadows = "0.2.2"

reqwest = { version = "0.11", features = ["json", "stream"] }
tokio = { version = "1", features = ["full"] }
futures-util = "0.3"

sysinfo = "0.30.10"
once_cell = "1.19.0"

lazy_static = "1.4.0"
fslock = "0.2.1"

# ipc-channel = "0.18.0"
rfd = "0.14.1"
[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
winapi = "0.3"
widestring = "1.1"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
